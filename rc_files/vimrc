set nocompatible              " be iMproved, required
filetype off                  " required
set laststatus=2

" Customizing the Airline
" function! AirlineInit()
" let g:airline_section_b = airline#section#create(['branch'])
" let g:airline_section_x = airline#section#create(['hunks'])
" let g:airline_section_y = '%y'
" endfunction
" autocmd User AirlineAfterInit call AirlineInit()

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

Plugin 'VundleVim/Vundle.vim'
Plugin 'mileszs/ack.vim'
Plugin 'a.vim'
Plugin 'hari-rangarajan/cctree'
Plugin 'raimondi/delimitmate'
Plugin 'yggdroot/indentline'
Plugin 'scrooloose/nerdcommenter'
Plugin 'majutsushi/tagbar'
Plugin 'godlygeek/tabular'
Plugin 'mbbill/undotree'

Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'dhruvasagar/vim-table-mode'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'flazz/vim-colorschemes'
Plugin 'kana/vim-submode'
Plugin 'ludovicchabant/vim-gutentags'
Plugin 'Valloric/YouCompleteMe'

" All of your Plugins must be added before the following line
"
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"Remove all trailing whitespace by pressing F3
nnoremap <F3>        : let _s=@/<Bar>                            : %s/\s\+$//e<Bar>                   : let @/=_s<Bar><CR>
nnoremap <leader>t   : TagbarOpen fj<CR>
nnoremap <leader>g   : GitGutterLineHighlightsToggle<CR>
nnoremap <leader>gp  : GitGutterPrevHunk<CR>
nnoremap <leader>gn  : GitGutterNextHunk<CR>
nnoremap <leader>gt  : GitGutterSignsToggle<CR>
nnoremap <leader>a   : bp<CR>
nnoremap <leader>d   : bn<CR>
nnoremap <leader>x   : bd<CR>
nnoremap <leader>i   : IndentLinesToggle<CR>
nnoremap <leader>h   : A<CR>
"                    : nmap <leader>w                            : s/\(<c-r>=expand("<cword>")<cr>\)/
nnoremap <leader>f   : Ack<space>
nnoremap <leader>fs  : Ack<space><c-r>=expand("<cword>")<cr><CR>
nnoremap <leader>cr  : CCTreeTraceReverse<CR>
nnoremap <leader>cf  : CCTreeTraceForward<CR>
nnoremap <leader>n   : set invnumber<CR>
" nnoremap <leader>p : set pt<CR>
nnoremap <leader>u   : UndotreeToggle<cr>

set t_Co=256
set incsearch
set hlsearch
set hidden
set showmatch
set noswapfile
set wildmenu
set bs=2
syntax on
set nu
set softtabstop=4 shiftwidth=4 expandtab
colo heroku-terminal
set undofile                " Save undos after file closes
set undodir=$HOME/.vim/undo " where to save undo histories
set undolevels=1000         " How many undos
set undoreload=10000        " number of lines to save for undo
set updatetime=10000

"if you want to highlight the whole line
"To highlight lines longer than 120 characters.
"augroup vimrc_autocmds
"    autocmd BufEnter * highlight OverLength ctermbg=red ctermfg=white guibg=#111111
"    autocmd BufEnter * match OverLength /\%120v.*/
"augroup END

"if you need to not pollute the whole line
highlight ColorColumn ctermbg=grey
call matchadd('ColorColumn', '\%120v', 100)

"to update/save after the file has been modified and no key has been pressed
"for update time
autocmd CursorHold,CursorHoldI * update

"To open file right where it was closed.
if has("autocmd")
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
                \| exe "normal! g'\"" | endif
endif

"To clear the white space and indent the files after writing,
"TODO :
" air-line
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
let g:airline_theme='badwolf'

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#formatter = 'default'

"For the CCTree
let g:CCTreeCscopeDb = "cscope.out"
let g:CCTreeRecursiveDepth = 3
let g:CCTreeMinVisibleDepth = 3

"gutentags
let g:gutentags_modules = ['ctags']
let g:gutentags_ctags_extra_args = ['--fields=+l']

"UltiSnips
" Trigger configuration. Do not use <tab> if you use
" https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

"make vim recognizing snippets dir
set runtimepath+=~/.vim/my-snippets/
" use different snippets dir
let g:UltiSnipsSnippetsDir='~/.vim/my-snippets/'
let g:UltiSnipsSnippetDirectories=["my-snippets"]

set listchars=tab:>-,trail:~,extends:>,precedes:<

"ycm no checking over the file size
let g:ycm_disable_for_files_larger_than_kb = 0

"ycm getting info from the tag file
let g:ycm_collect_identifiers_from_tags_files = 1

"search the word under the cursor using ack
let g:ack_use_cword_for_empty_search = 0

"space between comment and stuff like that
let NERDSpaceDelims=1
